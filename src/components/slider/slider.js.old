// import Hammer from 'hammerjs';
import $ from '../../commons/js/selector';
import addClick from '../../commons/js/addClick';
import toggleClass from '../../commons/js/toggleClass';

const defaultOptions = {
  classSliderList: 'sg-slider__list',
  classSwipe: 'sg-slider__swipe',
  classItem : 'sg-slider__list-item',
  classHide : 'sg-slider__list-item--hide',
  classAct : 'sg-slider__list-item--act',
  classPrev: 'sg-slider__list-item--prev',
  classNext: 'sg-slider__list-item--next',
  classNewNext: 'sg-slider__list-item--new-next',
  classSwipe: 'sg-slider__swipe'
}

class Slider {
  constructor(options = {}){
    const newOptions = Object.assign(defaultOptions, options);
    const { classSliderList,classSwipe,classHide,classAct,classPrev,classNext,classNewNext ,classItem} = newOptions;
    this.classSliderList = classSliderList;
    this.classSwipe = classSwipe;
    this.classHide = classHide;
    this.classAct = classAct;
    this.classPrev = classPrev;
    this.classNext = classNext;
    this.classNewNext = classNewNext;
    this.classItem = classItem;
  }

  init() {
    this.slider = $(this.classSliderList);
    this.swipe = $(this.classSwipe);
    if (this.isNotExitingElements()) {
      return;
    }
    this.initEvents();
  }

  isNotExitingElements() {
    return !this.slider || !this.swipe;
  }

  initEvents() {
    this.next = $(this.classNext);
    this.prev = $(this.classPrev);
    this.slider.addEventListener('click', e => this.setSliderEvent(e.target));
    //this.prev.addEventListener('click', () => this.setPrev());
  }

  setSliderEvent = target => {
    if (target.classList.contains(this.classNext)) {
      this.setNext();
    } else if (target.classList.contains(this.classPrev)) {
      this.setPrev();
    }
    return false;
  }

  removeHide(){
    if($(this.classHide)){
      $(this.classHide).remove();
    }
  }

  addNewNext(){
    const addedEl = document.createElement('li');
    $(this.classSliderList).appendChild(addedEl);
    addedEl.classList.add(this.classItem,this.classNewNext);
  }

  setNext(){
    this.removeHide();
    toggleClass(this.classPrev, this.classHide);
    toggleClass(this.classAct, this.classPrev);
    toggleClass(this.classNext, this.classAct);
    toggleClass(this.classNewNext, this.classNext);
    this.addNewNext();
  }

  setPrev(){
    console.log('PREV');
  }

}

export default Slider;
